// automatically generated by the FlatBuffers compiler, do not modify

package dev.north.fortyone.besu.replication.fb;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class TransactionEvent extends Table {
  public static TransactionEvent getRootAsTransactionEvent(ByteBuffer _bb) { return getRootAsTransactionEvent(_bb, new TransactionEvent()); }
  public static TransactionEvent getRootAsTransactionEvent(ByteBuffer _bb, TransactionEvent obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; vtable_start = bb_pos - bb.getInt(bb_pos); vtable_size = bb.getShort(vtable_start); }
  public TransactionEvent __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte type() { int o = __offset(4); return o != 0 ? bb.get(o + bb_pos) : 0; }
  public byte key(int j) { int o = __offset(6); return o != 0 ? bb.get(__vector(o) + j * 1) : 0; }
  public int keyLength() { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; }
  public ByteBuffer keyAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer keyInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  public byte value(int j) { int o = __offset(8); return o != 0 ? bb.get(__vector(o) + j * 1) : 0; }
  public int valueLength() { int o = __offset(8); return o != 0 ? __vector_len(o) : 0; }
  public ByteBuffer valueAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer valueInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }

  public static int createTransactionEvent(FlatBufferBuilder builder,
      byte type,
      int keyOffset,
      int valueOffset) {
    builder.startObject(3);
    TransactionEvent.addValue(builder, valueOffset);
    TransactionEvent.addKey(builder, keyOffset);
    TransactionEvent.addType(builder, type);
    return TransactionEvent.endTransactionEvent(builder);
  }

  public static void startTransactionEvent(FlatBufferBuilder builder) { builder.startObject(3); }
  public static void addType(FlatBufferBuilder builder, byte type) { builder.addByte(0, type, 0); }
  public static void addKey(FlatBufferBuilder builder, int keyOffset) { builder.addOffset(1, keyOffset, 0); }
  public static int createKeyVector(FlatBufferBuilder builder, byte[] data) { builder.startVector(1, data.length, 1); for (int i = data.length - 1; i >= 0; i--) builder.addByte(data[i]); return builder.endVector(); }
  public static void startKeyVector(FlatBufferBuilder builder, int numElems) { builder.startVector(1, numElems, 1); }
  public static void addValue(FlatBufferBuilder builder, int valueOffset) { builder.addOffset(2, valueOffset, 0); }
  public static int createValueVector(FlatBufferBuilder builder, byte[] data) { builder.startVector(1, data.length, 1); for (int i = data.length - 1; i >= 0; i--) builder.addByte(data[i]); return builder.endVector(); }
  public static void startValueVector(FlatBufferBuilder builder, int numElems) { builder.startVector(1, numElems, 1); }
  public static int endTransactionEvent(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

